"use client";

import { useState } from "react";
import { useRouter } from "next/navigation";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import {
  Card,
  CardHeader,
  CardTitle,
  CardContent,
  CardFooter,
} from "@/components/ui/card";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Switch } from "@/components/ui/switch";
import { ArrowLeft, Send, Save } from "lucide-react";
import { toast } from "sonner"; // üëà import sonner

export default function CreateNotificationPage() {
  const router = useRouter();

  const [form, setForm] = useState({
    title: "",
    content: "",
    type: "",
    target: "",
    isScheduled: false,
    scheduleDate: "",
  });

  const handleSubmit = (mode: "draft" | "send") => {
    console.log("Notification data:", { ...form, mode });

    // üëâ TODO: G·ªçi API ƒë·ªÉ l∆∞u/g·ª≠i th√¥ng b√°o
    // await fetch("/api/notifications", { method: "POST", body: JSON.stringify({ ...form, mode }) })

    if (mode === "draft") {
      toast.success("Th√¥ng b√°o ƒë√£ l∆∞u nh√°p");
    } else {
      toast.success("Th√¥ng b√°o ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng");
    }

    router.push("/admin/notifications");
  };

  return (
    <div className="p-6 space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold">T·∫°o th√¥ng b√°o m·ªõi</h1>
          <p className="text-gray-600 text-sm">
            Nh·∫≠p th√¥ng tin chi ti·∫øt ƒë·ªÉ g·ª≠i ƒë·∫øn ng∆∞·ªùi d√πng
          </p>
        </div>
        <Button
          variant="outline"
          onClick={() => router.push("/admin/notifications")}
        >
          <ArrowLeft className="h-4 w-4 mr-2" />
          Quay l·∫°i
        </Button>
      </div>

      {/* Form */}
      <Card className="max-w-7xl mx-auto">
        <CardHeader>
          <CardTitle>Th√¥ng tin th√¥ng b√°o</CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          {/* Ti√™u ƒë·ªÅ */}
          <div className="space-y-2">
            <Label>Ti√™u ƒë·ªÅ</Label>
            <Input
              value={form.title}
              onChange={(e) => setForm({ ...form, title: e.target.value })}
              placeholder="Nh·∫≠p ti√™u ƒë·ªÅ th√¥ng b√°o"
              className="bg-white border border-gray-300 text-gray-900 rounded-md shadow-sm"
            />
          </div>

          {/* N·ªôi dung */}
          <div className="space-y-2">
            <Label>N·ªôi dung</Label>
            <Textarea
              rows={6}
              value={form.content}
              onChange={(e) => setForm({ ...form, content: e.target.value })}
              placeholder="Nh·∫≠p n·ªôi dung chi ti·∫øt..."
              className="bg-white border border-gray-300 text-gray-900 rounded-md shadow-sm"
            />
          </div>

          {/* Lo·∫°i th√¥ng b√°o */}
          <div className="space-y-2">
            <Label>Lo·∫°i th√¥ng b√°o</Label>
            <Select
              value={form.type}
              onValueChange={(v) => setForm({ ...form, type: v })}
            >
              <SelectTrigger className="bg-white border border-gray-300 text-gray-900 rounded-md shadow-sm">
                <SelectValue placeholder="Ch·ªçn lo·∫°i" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="system">H·ªá th·ªëng</SelectItem>
                <SelectItem value="learning">H·ªçc t·∫≠p</SelectItem>
                <SelectItem value="commerce">Th∆∞∆°ng m·∫°i</SelectItem>
                <SelectItem value="warning">C·∫£nh b√°o</SelectItem>
              </SelectContent>
            </Select>
          </div>

          {/* ƒê·ªëi t∆∞·ª£ng nh·∫≠n */}
          <div className="space-y-2">
            <Label>ƒê·ªëi t∆∞·ª£ng nh·∫≠n</Label>
            <Select
              value={form.target}
              onValueChange={(v) => setForm({ ...form, target: v })}
            >
              <SelectTrigger className="bg-white border border-gray-300 text-gray-900 rounded-md shadow-sm">
                <SelectValue placeholder="Ch·ªçn ƒë·ªëi t∆∞·ª£ng nh·∫≠n" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">T·∫•t c·∫£ ng∆∞·ªùi d√πng</SelectItem>
                <SelectItem value="teachers">Gi√°o vi√™n</SelectItem>
                <SelectItem value="students">H·ªçc sinh</SelectItem>
                <SelectItem value="class">Theo l·ªõp c·ª• th·ªÉ</SelectItem>
              </SelectContent>
            </Select>
          </div>

          {/* H·∫πn gi·ªù g·ª≠i */}
          <div className="flex items-center justify-between border rounded-md p-3">
            <div>
              <Label>H·∫πn gi·ªù g·ª≠i</Label>
              <p className="text-xs text-gray-500">
                N·∫øu b·∫≠t, b·∫°n c√≥ th·ªÉ ch·ªçn ng√†y gi·ªù g·ª≠i thay v√¨ g·ª≠i ngay
              </p>
            </div>
            <Switch
              checked={form.isScheduled}
              onCheckedChange={(v) => setForm({ ...form, isScheduled: v })}
            />
          </div>
          {form.isScheduled && (
            <div className="space-y-2">
              <Label>Ng√†y gi·ªù g·ª≠i</Label>
              <Input
                type="datetime-local"
                value={form.scheduleDate}
                onChange={(e) =>
                  setForm({ ...form, scheduleDate: e.target.value })
                }
                className="bg-white border border-gray-300 text-gray-900 rounded-md shadow-sm"
              />
            </div>
          )}
        </CardContent>
        <CardFooter className="flex justify-end gap-2">
          <Button variant="outline" onClick={() => handleSubmit("draft")}>
            <Save className="h-4 w-4 mr-2" />
            L∆∞u nh√°p
          </Button>
          <Button onClick={() => handleSubmit("send")}>
            <Send className="h-4 w-4 mr-2" />
            G·ª≠i th√¥ng b√°o
          </Button>
        </CardFooter>
      </Card>
    </div>
  );
}
